'''
Функция check_prime используется для проверки является ли число простым
Имеет 2 параметра 1) Самое число 2) Необходимость узнать делители(если нужно то 1, если нет то 0)
Для того что бы прсто проверить является ли число простым, следует ввести самое число и второй параметр задать 0
Доя того что бы проверить является ли число простым, и если оно не простое узнать его делители,
то второй параметр следует задать 1
При таком выводе, для получения информации о простоте числа следует обратиться к 0 элементу множества,
для того что бы узнать о делителях следует обратиться к 1 элементу множества.
При получение значения True - означает что число простое
При получение значения False - означает что число не простое

'''

def check_prime(value, divsOn_Off): # инциализация функции с двумя параметрами value(знаечение)
                                    # и divsOn_Off(необходимоость вывести делители)
    if value > 1: # Если число натуральное
        if divsOn_Off == 0: # если пользователю не требуется вывод делителей
            flag = True     # использолвание метода флага
            for i in range(2, int(value ** 0.5) + 1): # Проверяем числа от 2 до корня из value
                if value % i == 0: # если находится делитель
                    flag = False # изменение флага на false, т.к есть хотя бы один делитель => число не простое
            return flag # вывод состояния флага

        if divsOn_Off == 1: # если пользователю требуется вывод делителей
            divs = [1,value] # cоздание массива с делителями числа(изначально это 1 и само число)
            flag = True # использование метода флага
            for i in range(2, int(value ** 0.5) + 1): # Проверяем числа от 2 до корня из value
                if value % i == 0: # если находится делитель
                    divs.append(i) # добавляем этот делитель к массиву делитилей(divs)
                    divs.append(value // i) # добавляем другой делитель "с другого конца"
                    flag = False # изменение флага на false, т.к есть хотя бы один делитель => число не простое
            if flag == True: # проверка, если флаг остался true => число простое и у него нет делителей
                return flag, 'empty' # вывод состояния флага, и получение информации о том что у него нет делителей
            else: # если состояние флага изменилось => число не простое
                divs = list(set(divs)) # удаление из конечного массива повторяющехся делителей
                divs.sort() # сортировка по возрастанию, для удобства будущего удобства
                return flag, divs # вывод состояния флага, и массива с его делителями
    else:
        if value == 1: # если число 1 => не простое число
            return 'Не простое число'
        if value < 1: # если число <1 => не натуральное число
            return 'Не натуральное число'



'''Пример теста функции при значении второго праметра - 0'''
#val = int(input('значение >>> '))
#divs = int(input('необходимость знать делители >>> '))
#n = check_prime(val, divs)
#print(n)


'''Пример теста функции при значении второго праметра - 1 '''
#val = int(input('значение >>> '))
#divs = int(input('необходимость знать делители >>> '))
#n = check_prime(val, divs)
#print(n[0],n[1])